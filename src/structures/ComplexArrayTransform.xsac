module ComplexArrayTransform;

use ComplexArrayBasics: { dim, shape, sel };
use ComplexBasics: { zero, complex };

export all;

#include "UDTtemplates.mac"

/******************************************************************************
 *
 * Structural OPS
 *
 ******************************************************************************/

inline
complex sum(complex[d:shp] arr)
{
	return with {
      (_mul_SxV_(0, shp) <= iv < shp) : arr[iv];
   } : fold(ComplexArrayArith::+, ComplexBasics::toc(0d, 0d));
}

TAKE(complex)

DROP(complex)

TILE(complex)

CAT(complex)

REVERSE(complex)

SHIFT(complex)

ROTATE(complex)
