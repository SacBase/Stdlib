class Indent;

classtype int;

/******************************************************************************
 *
 * Depends on String and TermFile.
 *
 ******************************************************************************/

use String: { string, strlen, tochar, to_string };
use TermFile: { printf };

export all;

objdef Indent indent = to_Indent(0);

Indent newIndent(int value)
{
    return to_Indent(value);
}

int getIndent()
{
    return getIndent(indent);
}

int getIndent(Indent &i)
{
    val = from_Indent(i);
    i = to_Indent(val);
    return val;
}

void setIndent(Indent &i, int val)
{
    i = to_Indent(val);
}

void doIndent(string pattern)
{
    doIndent(indent, pattern);
}

void doIndent(Indent &i, string pattern)
{
    val = getIndent(i);
    indents = _reshape_VxA_([_mul_SxS_(strlen(pattern), val)],
                            { iv -> tochar(pattern) | iv < [val] });
    printf(to_string(indents));
}

void incIndent(Indent &i)
{
    val = from_Indent(i);
    i = to_Indent(_add_SxS_(val, 1));
}

void incIndent(Indent &i, int offset)
{
    val = from_Indent(i);
    i = to_Indent(_add_SxS_(val, offset));
}

void incIndent()
{
    incIndent(indent);
}

void decIndent(Indent &i)
{
    val = from_Indent(i);
    i = to_Indent(_sub_SxS_(val, 1));
}

void decIndent(Indent &i, int offset)
{
    val = from_Indent(i);
    i = to_Indent(_sub_SxS_(val, offset));
}

void decIndent()
{
    decIndent(indent);
}
