module ArrayIO;

 /******************************************************************************
 *
 * Depends on Array, String, ArrayFormat, TermFile, and File.
 *
 ******************************************************************************/

use Array: all;
use String: { string };
use ArrayFormat: { format };
use TermFile: { TermFile, stdout };
use File: { File };

export { print, fprint, show };

#include "builtin.mac"

#define HASH #
#define PRINTME(x) x
#define QUOTEME(x) #x

#define LINKSPECS(actualtype, typename)                                        \
external void printarray(File &stream, int d,                                  \
                         int[.] s, actualtype[*] a);                           \
    PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##Array)      \
    PRINTME(HASH)pragma linkobj "src/ArrayIO/PrintArray.o"                     \
external void printarray(TermFile &stream, int d,                              \
                         int[.] s, actualtype[*] a);                           \
    PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##Array)      \
    PRINTME(HASH)pragma linkobj "src/ArrayIO/PrintArray.o"                     \
external void printarray(File &stream, string fmt, int d,                      \
                         int[.] s, actualtype[*] a);                           \
    PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##ArrayFormat)\
    PRINTME(HASH)pragma linkobj "src/ArrayIO/PrintArray.o"                     \
external void printarray(TermFile &stream, string fmt, int d,                  \
                         int[.] s, actualtype[*] a);                           \
    PRINTME(HASH)pragma linkname QUOTEME(ARRAYIO__Print##typename##ArrayFormat)\
    PRINTME(HASH)pragma linkobj "src/ArrayIO/PrintArray.o"

LINKSPECS(bool, Bool)
LINKSPECS(byte, Byte)
LINKSPECS(short, Short)
LINKSPECS(int, Int)
LINKSPECS(long, Long)
LINKSPECS(longlong, Longlong)
LINKSPECS(ubyte, Ubyte)
LINKSPECS(ushort, Ushort)
LINKSPECS(uint, Uint)
LINKSPECS(ulong, Ulong)
LINKSPECS(ulonglong, Ulonglong)
LINKSPECS(float, Float)
LINKSPECS(double, Double)
LINKSPECS(char, Char)

external void showarray(File &stream, int d, int[.] s, char[*] a);
    #pragma linkname "ARRAYIO__ShowCharArray"
    #pragma linkobj "src/ArrayIO/ShowArray.o"
external void showarray(TermFile &stream, int d, int[.] s, char[*] a);
    #pragma linkname "ARRAYIO__ShowCharArray"
    #pragma linkobj "src/ArrayIO/ShowArray.o"

/******************************************************************************/

#define PRINT(typ, postfix, zero, one)                                         \
inline void fprint(TermFile &stream, string fmt, typ[d:shp] arr)               \
{                                                                              \
    printarray(stream, fmt, d, shp, arr);                                      \
}                                                                              \
                                                                               \
inline void fprint(TermFile &stream, typ[d:shp] arr)                           \
{                                                                              \
    printarray(stream, d, shp, arr);                                           \
}                                                                              \
                                                                               \
inline void fprint(File &stream, string fmt, typ[d:shp] arr)                   \
{                                                                              \
    printarray(stream, fmt, d, shp, arr);                                      \
}                                                                              \
                                                                               \
inline void fprint(File &stream, typ[d:shp] arr)                               \
{                                                                              \
    printarray(stream, d, shp, arr);                                           \
}                                                                              \
                                                                               \
inline void print(string fmt, typ[d:shp] arr)                                  \
{                                                                              \
    printarray(stdout, fmt, d, shp, arr);                                      \
}                                                                              \
                                                                               \
inline void print(typ[d:shp] arr)                                              \
{                                                                              \
    printarray(stdout, d, shp, arr);                                           \
}

BUILT_IN(PRINT)

/******************************************************************************/

#define SHOW(typ)                                                              \
inline void show(typ[+] arr)                                                   \
{                                                                              \
    carr = format(arr);                                                        \
    showarray(stdout, dim(carr), shape(carr), carr);                           \
}

/*BUILT_IN(SHOW)*/
SHOW(int)
SHOW(float)
SHOW(double)
SHOW(bool)
SHOW(char)
